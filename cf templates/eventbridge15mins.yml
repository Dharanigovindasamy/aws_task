AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a Lambda function with an EventBridge trigger that runs every 15 minutes.

Resources:
  # IAM Role for Lambda Execution
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  # Lambda Function
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: LogCurrentTimeLambda
      Handler: index.handler              
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event, context) => {
              const currentTime = new Date().toISOString();
              console.log(`The Lambda function ran at: ${currentTime}`);
              return {
                  statusCode: 200,
                  body: `Function ran at ${currentTime}`
              };
          };
      Runtime: nodejs22.x                 
      Timeout: 10                       

  # EventBridge Rule
  EventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: loglambda
      ScheduleExpression: rate(15 minutes)
      State: ENABLED
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn
          Id: LambdaTarget

  # Permission for EventBridge to Invoke Lambda
  LambdaPermissionForEventBridge:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRule.Arn
